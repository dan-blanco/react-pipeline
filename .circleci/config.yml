# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  #aws-cli: circleci/aws-cli@3.1
  aws-ecr: circleci/aws-ecr@8.1.2

executors:
  node-executor:
    docker:
      - image: node:latest
        #auth:
          #username: mydockerhub-user
          #password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    working_directory: /react-app
    

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create-react-app-if-none: 
    executor: node-executor
    steps:
      - checkout
      - run:
          name: looking for react project named "code"
          command: |
            if [ ! -d "react-app" ]; then # if dir not exists...
              mkdir react-app
            fi
            cd react-app
            if [ ! -d "code" ]; then # if dir not exists...
              npx create-react-app code
              echo "created react app named 'code' "
            else
              echo "app already exists"
            fi
      - run:
          name: build react code
          command: |
            cd react-app
            cd code
            npm install
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - react-app/code/build/*   
            
  send-react-image-ecr:
    executor: aws-ecr/default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - aws-ecr/build-and-push-image:
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-cli-version: latest
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          #context: myContext
          create-repo: true
          dockerfile: Dockerfile
          extra-build-args: '--compress'
          #new-profile-name: newProfileName
          no-output-timeout: 20m
          #path: Dockerfile
          platform: linux/amd64
          #profile-name: myProfileName
          public-registry: false
          push-image: true
          region: $AWS_REGION
          registry-id: AWS_ECR_REGISTRY_ID
          repo: nginx-blanco-schemes
          repo-scan-on-push: true
          #role-arn: 'arn:aws:iam::123456789012:role/testing'
          skip-when-tags-exist: false
          #source-profile: sourceProfileName
          tag: 'latest'

      

workflows:
  react-node-workflow: 
    jobs:
      - create-react-app-if-none
      - send-react-image-ecr:
          requires:
            - create-react-app-if-none
