# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  #aws-cli: circleci/aws-cli@3.1
  aws-ecr: circleci/aws-ecr@8.1.2

executors:
  node-executor:
    docker:
      - image: node:latest
        #auth:
          #username: mydockerhub-user
          #password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    working_directory: /react-app
    

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create-react-app-if-none: 
    executor: node-executor
    steps:
      - checkout
      - run:
          name: looking for react project named "code"
          command: |
            if [ ! -d "react-app" ]; then # if dir not exists...
              mkdir react-app
            fi
            cd react-app
            if [ ! -d "code" ]; then # if dir not exists...
              npx create-react-app code
              echo "created react app named 'code' "
            else
              echo "app already exists"
            fi
      - run:
          name: build react code
          command: |
            cd react-app
            cd code
            npm install
            npm run build
      - persist_to_workspace:
          root: react-app
          paths:
            - code/build     
      
  create-ecr-image:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Authenticate Docker Client
          command: |
            aws ecr get-login-password --region us-west-1 >> pass.txt;
            cat pass.txt
            # Retrieve an authentication token and authenticate your Docker client to your registry
            aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 338101346306.dkr.ecr.us-west-1.amazonaws.com
      - run:
          name: build-tage-docker-image
          command: |
            docker build -t nginx-blanco-schemes .
            docker tag nginx-blanco-schemes:latest 338101346306.dkr.ecr.us-west-1.amazonaws.com/nginx-blanco-schemes:latest
      - run:
          name: push-image-to-ecr
          command: |
            docker push 338101346306.dkr.ecr.us-west-1.amazonaws.com/nginx-blanco-schemes:latest 

workflows:
  react-node-workflow: 
    jobs:
      - create-react-app-if-none
      - aws-ecr/build-and-push-image:
          account-url: 338101346306.dkr.ecr.us-west-1.amazonaws.com
          aws-access-key-id: AKIAU5ODJEABKU2EW2I7
          aws-secret-access-key: 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
          context: myContext
          create-repo: true
          dockerfile: Dockerfile
          path: Dockerfile
          profile-name: danblanco
          region: us-west-1
          repo: nginx-blanco-schemes
          tag: 'latest'
